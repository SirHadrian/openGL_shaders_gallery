#version 460 core
layout(location = 0) out vec4 FragColor;

in vec3 color;
in vec2 texCoord;

uniform sampler2D tex0;
// Load texture
// vec4 text = texture(tex0, texCoord * vec2(-1., 1.));

uniform float         u_time;
uniform vec2          u_resolution;
uniform vec2          u_mouse;

#define T             u_time
#define R             u_resolution
#define FC            gl_FragCoord
#define M             u_mouse

#define PI            3.14159265359
#define S(a, b, x)    smoothstep(a, b, x)

void
main()
{
  vec2 uv = FC.xy / R.xy;
  uv.x *= R.x / R.y;

  vec3 color = vec3(0.);

  vec2 m = vec2(M.x / R.x, 1. - M.y / R.y);

  vec2 point[5];
  point[0] = vec2(0.83, 0.75);
  point[1] = vec2(0.60, 0.07);
  point[2] = vec2(0.28, 0.64);
  point[3] = vec2(0.31, 0.26);
  point[4] = m.xy;

  float mdist = 1.;

  for (float i = 0.; i < 5.; i += 1.)
  {
    float dist = distance(uv, point[int(i)]);
    mdist = min(mdist, dist);
  }

  color += mdist;

  // Show isolines
  // color -= step(.7, abs(sin(50.0 * mdist))) * .3;

  FragColor = vec4(color, 1.);
}
